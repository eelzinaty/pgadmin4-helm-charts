# A secret provider class to load AWS Secret Manager's secrets.
# The secrets would be loaded as a file with the option to load them into environment variables

{{- if .Values.secretProviderClass.create -}}
apiVersion: secrets-store.csi.x-k8s.io/v1alpha1
kind: SecretProviderClass
metadata:
  name: {{ include "pgadmin.secretsProviderClassName" . }}
  labels:
    {{- include "pgadmin.labels" . | nindent 4 }}
  {{- with .Values.secretProviderClass.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  provider: aws
  {{- if .Values.secretProviderClass.createEnvironmentVariables }}
  secretObjects:                                 
  - secretName: {{ printf "%s-asm-secrets" (include "pgadmin.secretsProviderClassName" .) }}
    type: Opaque
    labels:
        {{- include "pgadmin.labels" . | nindent 6 }}
    data: 
    {{- range $secret := .Values.secretProviderClass.secrets }} 
    {{- range $env := $secret.environmentVariables }} 
    - objectName: {{ printf "%s%s" $secret.asmName ( ternary (printf ":%s" $env.secretKey) "" (ne ($env.secretKey) "SELF")) | replace "/" ":" }}
      key: {{ $env.environmentVariableName }}
    {{- end }}
    {{- end }}
  {{- end }}
  parameters:
    pathTranslation: ":"
    objects: |
      {{- range $secret := .Values.secretProviderClass.secrets }} 
      - objectName: "{{ $secret.asmName }}"
        objectType: secretsmanager
        {{- if $secret.environmentVariables }}
        jmesPath:
        {{- range $env := $secret.environmentVariables }}
        {{- if ne $env.secretKey "SELF" }}
            - path: "{{ $env.secretKey }}"
              objectAlias: "{{ printf "%s:%s" $secret.asmName $env.secretKey | replace "/" ":" }}"
        {{- end }}
        {{- end }}
        {{- end }}
      {{- end }}
{{- end }}
